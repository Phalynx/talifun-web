#summary A module that compresses js into a single file, and css into a single file.
#labels Js,Css,compress,crush

= Introduction =

A module that compresses js into a single file, and css into a single file.

It also watches for changes to any of the watched css or js files and regenerates the crushed file. It generates a unique hash for the crushed file and appends it to the css url and the js url. So you are always sure to be served the correct content, regardless of caching.

= When to use it =

When you want to minimize the number of http requests and the size of js and css files.

= Features =
  * Can crush and compress multiple css files into one file
  * Can crush and compress multiple js files into one file
  * CDN friendly
  * Always serves latest version of crushed file by appending hash of crushed file to url
  * Detects any changes to component js or css files and regenerates crushed file on the fly
  * Supports multiple grouping of js or css
  * Debug mode for when you need to work with the css or js

= Configuration =

Example Configuration:
{{{
<configuration>
	<configSections>
		<section name="Crusher" type="Talifun.Web.Crusher.Config.CrusherSection, Talifun.Web" requirePermission="false" allowDefinition="MachineToApplication"/>
	</configSections>
	<Crusher>
		<!-- outputFilePath is the identifier for the cssGroup, so make sure its unique for each cssGroup  -->
		<cssGroups>
			<!-- Css group to demo the crushing -->
			<cssGroup name="SiteCss" debug="false" outputFilePath="~/Static/Css/site.css">
				<files>
					<file name="JQueryUI" filePath="~/Static/Css/jquery-ui-1.7.1.css" compressionType="Hybrid" />
					<file name="Default" filePath="~/Static/Css/default.css" compressionType="Hybrid" />
					<file name="Test1" filePath="~/Static/Css/test1.css" compressionType="Hybrid" />
					<file name="Test2" filePath="~/Static/Css/test2.css" compressionType="Hybrid" />
					<file name="Test3" filePath="~/Static/Css/test3.css" compressionType="Hybrid" />
					<file name="Test4" filePath="~/Static/Css/test4.css" compressionType="Hybrid" />
				</files>
			</cssGroup>
		</cssGroups>
		<!-- outputFilePath is the identifier for the jsGroup, so make sure its unique for each jsGroup  -->
		<jsGroups>
			<!-- Js group to demo the crushing  -->
			<jsGroup name="SiteJs" debug="false" outputFilePath="~/Static/Js/site.js">
				<files>
					<file name="JQuery" filePath="~/Static/Js/jquery-1.3.2.min.js" compressionType="Min"/>
					<file name="JQueryUI" filePath="~/Static/Js/jquery-ui-1.7.1.min.js" compressionType="Min"/>
					<file name="JqueryFlash" filePath="~/Static/Js/jquery.flash.min.js" compressionType="Min"/>
					<file name="JqueryValidate" filePath="~/Static/Js/jquery.validate.min.js" compressionType="Min"/>
					<file name="JqueryValidateExtra" filePath="~/Static/Js/additional-validation-methods.min.js" compressionType="Min"/>
				</files>
			</jsGroup>
		</jsGroups>
	</Crusher>	
	<system.web>
		<httpModules>
			<add name="CrusherModule" type="Talifun.Web.Crusher.CrusherModule, Talifun.Web"/>
		</httpModules>
	</system.web>		
</configuration>
}}}